{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel\\\\Downloads\\\\fe3-final-main (1)\\\\fe3-final-main\\\\src\\\\Routes\\\\Detail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios'; //Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Detail = () => {\n  _s();\n\n  var _user$name, _user$name2, _user$name3, _user$picture;\n\n  const [user, setUser] = useState({});\n  const url = 'https://jsonplaceholder.typicode.com/users/:id';\n  useEffect(() => {\n    axios(url).then(_ref => {\n      let {\n        data\n      } = _ref;\n      return setUser(data.results[0]);\n    });\n  }, []); // Consumiendo el parametro dinamico de la URL deberan hacer un fetch a un user en especifico\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Detail Dentist id \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [(_user$name = user.name) === null || _user$name === void 0 ? void 0 : _user$name.title, \" \", (_user$name2 = user.name) === null || _user$name2 === void 0 ? void 0 : _user$name2.first, \" \", (_user$name3 = user.name) === null || _user$name3 === void 0 ? void 0 : _user$name3.last]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: (_user$picture = user.picture) === null || _user$picture === void 0 ? void 0 : _user$picture.large,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Detail, \"l0nCqodPWuiGgcnCHidP90F0Gls=\");\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"names":["React","useEffect","useState","axios","Detail","user","setUser","url","then","data","results","name","title","first","last","picture","large"],"sources":["C:/Users/angel/Downloads/fe3-final-main (1)/fe3-final-main/src/Routes/Detail.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\n\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nconst Detail = () => {\n  const [user, setUser] = useState({})\n  const url = 'https://jsonplaceholder.typicode.com/users/:id'\n\n  useEffect(()=>{\n    axios(url)\n    .then(({data}) => setUser(data.results[0]))\n  },[])\n \n  // Consumiendo el parametro dinamico de la URL deberan hacer un fetch a un user en especifico\n\n  return (\n    <>\n      <h1>Detail Dentist id </h1>\n      {/* aqui deberan renderizar la informacion en detalle de un user en especifico */}\n      {/* Deberan mostrar el name - email - phone - website por cada user en especifico */}\n      <h2>{user.name?.title} {user.name?.first} {user.name?.last}</h2>\n            <img src={user.picture?.large} alt=\"\" />\n    </>\n  )\n}\n\nexport default Detail"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;EAAA;;EAAA;;EACnB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAMK,GAAG,GAAG,gDAAZ;EAEAN,SAAS,CAAC,MAAI;IACZE,KAAK,CAACI,GAAD,CAAL,CACCC,IADD,CACM;MAAA,IAAC;QAACC;MAAD,CAAD;MAAA,OAAYH,OAAO,CAACG,IAAI,CAACC,OAAL,CAAa,CAAb,CAAD,CAAnB;IAAA,CADN;EAED,CAHQ,EAGP,EAHO,CAAT,CAJmB,CASnB;;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,yBAAKL,IAAI,CAACM,IAAV,+CAAK,WAAWC,KAAhB,sBAAwBP,IAAI,CAACM,IAA7B,gDAAwB,YAAWE,KAAnC,sBAA2CR,IAAI,CAACM,IAAhD,gDAA2C,YAAWG,IAAtD;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF,eAKQ;MAAK,GAAG,mBAAET,IAAI,CAACU,OAAP,kDAAE,cAAcC,KAAxB;MAA+B,GAAG,EAAC;IAAnC;MAAA;MAAA;MAAA;IAAA,QALR;EAAA,gBADF;AASD,CApBD;;GAAMZ,M;;KAAAA,M;AAsBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}